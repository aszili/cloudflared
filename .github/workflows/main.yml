name: Docker Build & Push

on:
  push:
    tags:
      - "*"
  schedule:
    - cron: "30 10 * * 4"
  workflow_dispatch:
    inputs:
      force:
        description: Force build image even if already exists
        required: false
        default: false
        type: boolean

env:
  DOCKER_USERNAME: ${{ github.repository_owner }}
  DOCKER_CONTAINER_NAME: ${{ github.event.repository.name }}
  DOCKER_TARGET_PLATFORM: linux/amd64

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Checkout
        uses: actions/checkout@v4
        if: ${{ !github.event.act }}

      - name: Get latest Cloudflared Version
        id: cloudflared-version
        uses: pozetroninc/github-action-get-latest-release@v0.7.0
        with:
          owner: cloudflare
          repo: cloudflared
          token: ${{ secrets.GITHUB_TOKEN }}
          excludes: prerelease, draft

      - name: Prepare
        id: prepare
        run: |
          echo "docker_platform=${DOCKER_TARGET_PLATFORM}" >> $GITHUB_ENV
          echo "builddate=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ steps.cloudflared-version.outputs.release }}" >> $GITHUB_ENV

      - name: Check if Image Exists
        id: image-exists
        uses: tyriis/docker-image-tag-exists@v2.0.0
        with:
          registry: ghcr.io
          repository: ${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}
          tag: ${{ env.IMAGE_TAG }}

      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        if: ${{ inputs.force || steps.image-exists.outputs.tag == 'not found' }}
        with:
          dockerfile: ./Dockerfile
          format: sarif
          output-file: hadolint-results.sarif
          no-fail: true

      - name: Print Hadolint lint Results
        if: ${{ inputs.force || steps.image-exists.outputs.tag == 'not found' }}
        run: echo 'HADOLINT LINT RESULTS => ${{ env.HADOLINT_RESULTS }}'

      - name: Upload Analysis Results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        if: ${{ inputs.force || steps.image-exists.outputs.tag == 'not found' }}
        with:
          sarif_file: hadolint-results.sarif
          wait-for-processing: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: ${{ inputs.force || steps.image-exists.outputs.tag == 'not found' }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: ${{ inputs.force || steps.image-exists.outputs.tag == 'not found' }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Container and Push
        uses: docker/build-push-action@v5
        if: ${{ inputs.force || steps.image-exists.outputs.tag == 'not found' }}
        with:
          context: .
          platforms: ${{ env.DOCKER_TARGET_PLATFORM }}
          push: true
          build-args: CLOUDFLARED_VERSION=${{ env.IMAGE_TAG }}
          tags: |
            ghcr.io/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_CONTAINER_NAME }}:${{ env.IMAGE_TAG }}
            ghcr.io/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_CONTAINER_NAME }}:latest
